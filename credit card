Step 1: Import Libraries
import pandas as pd import numpy as np import matplotlib.pyplot as plt import seaborn as sns from sklearn.preprocessing import StandardScaler from sklearn.model_selection import train_test_split from sklearn.ensemble import RandomForestClassifier from sklearn.metrics import confusion_matrix, classification_report

Step 2: Load Dataset
df = pd.read_csv("creditcard.csv") # Make sure creditcard.csv is uploaded

Step 3: Explore Data
print("Shape of dataset:", df.shape) print("Class distribution:\n", df['Class'].value_counts()) print("Missing values:\n", df.isnull().sum())

Step 4: Preprocessing
scaler = StandardScaler() df['Amount'] = scaler.fit_transform(df['Amount'].values.reshape(-1, 1)) df = df.drop(['Time'], axis=1)

Step 5: Split Data
X = df.drop('Class', axis=1) y = df['Class'] X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

Step 6: Train the Model
model = RandomForestClassifier() model.fit(X_train, y_train)

Step 7: Predict
y_pred = model.predict(X_test)

Step 8: Evaluate the Model
print("\nConfusion Matrix:") print(confusion_matrix(y_test, y_pred))

print("\nClassification Report:") print(classification_report(y_test, y_pred))

Optional: Visualize Class Imbalance
plt.figure(figsize=(6,4)) sns.countplot(x='Class', data=df) plt.title('Class Distribution') plt.show()
